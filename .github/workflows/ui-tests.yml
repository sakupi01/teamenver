name: 'UI Tests'

env:
  # ðŸ‘‡ supabase secrets
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

on: push

jobs:
  # Install and cache npm dependencies
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Cache bun dependencies
        uses: actions/cache@v4
        id: bun-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun

      - name: Install dependencies if cache invalid
        if: steps.bun-cache.outputs.cache-hit != 'true'
        run: bun i --frozen-lockfile

  check: # This job is for checking the code style and type errors.
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Restore bun dependencies
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun

      - name: Run Type Check
        run: bun run check:typecheck # check ts compile error
      - name: Run Lint
        run: bun run check:lint # check code style

  # Build storybook
  build-storybook:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Restore bun dependencies
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun

      - name: Cache Storybook
        id: storybook_cache
        uses: actions/cache@v4
        with:
          path: storybook-static
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Build Storybook
        run: bun run storybook:build --quiet

  # Run interaction and accessibility tests
  test-storybook:
    runs-on: ubuntu-latest
    needs: build-storybook
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Restore bun dependencies
        id: bun-cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun

      - name: Restore Storybook
        id: storybook_cache
        uses: actions/cache@v4
        with:
          path: storybook-static
          key: ${{ runner.os }}-${{ github.sha }}

      - name: Install Playwright
        run: bunx playwright install --with-deps chromium

      - name: Install MSW
        run: bun add msw-storybook-addon

      - name: Serve Storybook and run tests
        run: bun run storybook:ci
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{secrets.NEXT_PUBLIC_SUPABASE_URL}}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY}}
